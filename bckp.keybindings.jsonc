// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "key": "f9",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "alt+cmd+r",
        "command": "-workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+q",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    // {
    //     "key": "ctrl+shift+up",
    //     "command": "editor.action.moveLinesUpAction",
    //     "when": "editorTextFocus && !editorReadonly"
    // },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    // {
    //     "key": "ctrl+shift+down",
    //     "command": "editor.action.moveLinesDownAction",
    //     "when": "editorTextFocus && !editorReadonly"
    // },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "alt+cmd+l",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+l",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-cursorWordPartLeft",
        "when": "textInputFocus"
    },
    // {
    //     "key": "ctrl+alt+left",
    //     "command": "workbench.action.navigateBack",
    //     "when": "canNavigateBack"
    // },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-cursorWordPartRight",
        "when": "textInputFocus"
    },
    // {
    //     "key": "ctrl+alt+right",
    //     "command": "workbench.action.navigateForward",
    //     "when": "canNavigateForward"
    // },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    // {
    //     "key": "cmd+down",
    //     "command": "-notebook.focusBottom",
    //     "when": "notebookEditorFocused && !inputFocus"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-workbench.action.terminal.scrollToNextCommand",
    //     "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-workbench.action.terminal.navigationModeFocusNext",
    //     "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-commentsFocusViewFromFilter",
    //     "when": "commentsFilterFocus"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-selectNextSuggestion",
    //     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-selectNextCodeAction",
    //     "when": "codeActionMenuVisible"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-search.action.openResult",
    //     "when": "fileMatchOrMatchFocus && searchViewletVisible"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-search.focus.nextInputBox",
    //     "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-editor.action.goToDeclaration",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-explorer.openAndPassFocus",
    //     "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-list.scrollDown",
    //     "when": "listFocus && !inputFocus"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-list.select",
    //     "when": "listFocus && !inputFocus"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-keybindings.editor.focusKeybindings",
    //     "when": "inKeybindings && inKeybindingsSearch"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-interactive.scrollToBottom",
    //     "when": "resourceScheme == 'vscode-interactive'"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-problems.action.focusProblemsFromFilter",
    //     "when": "problemsFilterFocus"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-revealReference",
    //     "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-problems.action.open",
    //     "when": "problemFocus"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "-cursorBottom",
    //     "when": "textInputFocus"
    // },
    // {
    //     "key": "cmd+down",
    //     "command": "cursorBottom",
    //     "when": "textInputFocus"
    // },
    // {
    //     "key": "cmd+end",
    //     "command": "-cursorBottom",
    //     "when": "textInputFocus"
    // },
    // {
    //     "key": "ctrl+g",
    //     "command": "workbench.action.gotoLine"
    // },
    // {
    //     "key": "cmd+l",
    //     "command": "-workbench.action.gotoLine"
    // },
    // {
    //     "key": "ctrl+f5",
    //     "command": "workbench.action.debug.run",
    //     "when": "debuggersAvailable && !inDebugMode && !terminalFocus"
    // },
    // {
    //     "key": "ctrl+d",
    //     "command": "-workbench.action.debug.run",
    //     "when": "debuggersAvailable && !inDebugMode && !terminalFocus"
    // },
    // {
    //     "key": "ctrl+d",
    //     "command": "-deleteRight",
    //     "when": "textInputFocus"
    // },
    // {
    //     "key": "ctrl+d",
    //     "command": "editor.action.duplicateSelection",
    //     "when": "editorHasSelection && editorTextFocus && !editorReadonly"
    // },
    // {
    //     "key": "cmd+d",
    //     "command": "-editor.action.duplicateSelection",
    //     "when": "editorHasSelection && editorTextFocus && !editorReadonly"
    // },
    // {
    //     "key": "ctrl+d",
    //     "command": "editor.action.copyLinesDownAction",
    //     "when": "editorTextFocus && !editorHasSelection && !editorReadonly"
    // },
    // {
    //     "key": "cmd+d",
    //     "command": "-editor.action.copyLinesDownAction",
    //     "when": "editorTextFocus && !editorHasSelection && !editorReadonly"
    // },
    // {
    //     "key": "cmd+f",
    //     "command": "actions.find",
    //     "when": "editorFocus || editorIsOpen"
    // },
    // {
    //     "key": "cmd+f",
    //     "command": "-actions.find",
    //     "when": "editorFocus || editorIsOpen"
    // },
    // {
    //     "key": "shift+cmd+f",
    //     "command": "workbench.action.findInFiles"
    // },
    // {
    //     "key": "shift+cmd+f",
    //     "command": "-workbench.action.findInFiles"
    // },
    // {
    //     "key": "ctrl+shift+f",
    //     "command": "workbench.action.terminal.searchWorkspace",
    //     "when": "terminalFocus && erminalProcessSupported && terminalTextSelected"
    // },
    // {
    //     "key": "shift+cmd+f",
    //     "command": "-workbench.action.terminal.searchWorkspace",
    //     "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    // },
    // {
    //     "key": "ctrl+shift+f",
    //     "command": "workbench.view.search",
    //     "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    // },
    // {
    //     "key": "shift+cmd+f",
    //     "command": "-workbench.view.search",
    //     "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    // },
    // {
    //     "key": "ctrl+shift+f",
    //     "command": "filesExplorer.findInFolder",
    //     "when": "explorerResourceIsFolder && filesExplorerFocus"
    // },
    // {
    //     "key": "shift+cmd+f",
    //     "command": "-filesExplorer.findInFolder",
    //     "when": "explorerResourceIsFolder && filesExplorerFocus"
    // },
    // {
    //     "key": "cmd+r",
    //     "command": "editor.action.startFindReplaceAction",
    //     "when": "editorFocus || editorIsOpen"
    // },
    // {
    //     "key": "cmd+z",
    //     "command": "undo"
    // },
    // {
    //     "key": "shift+cmd+z",
    //     "command": "redo"
    // },
    // {
    //     "key": "cmd+a",
    //     "command": "editor.action.selectAll"
    // },
    // {
    //     "key": "cmd+a",
    //     "command": "-editor.action.selectAll"
    // },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "cmd+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.saveAll"
    },
    {
        "key": "cmd+s",
        "command": "-workbench.action.files.saveAll"
    },
    // {
    //     "key": "shift+alt+up",
    //     "command": "-editor.action.copyLinesUpAction",
    //     "when": "editorTextFocus && !editorReadonly"
    // },
    // {
    //     "key": "shift+alt+down",
    //     "command": "-editor.action.copyLinesDownAction",
    //     "when": "editorTextFocus && !editorReadonly"
    // },
    // {
    //     "key": "ctrl+p",
    //     "command": "editor.action.triggerParameterHints",
    //     "when": "editorHasSignatureHelpProvider && editorTextFocus"
    // },
    // {
    //     "key": "cmd+p",
    //     "command": "-editor.action.triggerParameterHints",
    //     "when": "editorHasSignatureHelpProvider && editorTextFocus"
    // },
    // {
    //     "key": "ctrl+y",
    //     "command": "-editor.action.deleteLines",
    //     "when": "textInputFocus && !editorReadonly"
    // },
    // {
    //     "key": "shift+cmd+k",
    //     "command": "-editor.action.deleteLines",
    //     "when": "textInputFocus && !editorReadonly"
    // },
    // TERMINAL
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.terminal.toggleTerminal",
        // "when": "terminal.active"
    },
    {
        "key": "shift+alt+j",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    // FILE TREE
    {
        "key": "ctrl ctrl",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletVisible"
    },
    {
        "key": "ctrl ctrl",
        "command": "workbench.explorer.fileView.focus",
        "when": "!explorerViewletVisible && editorTextFocus"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "explorerViewletFocus"
    },
    {
        "key": "d",
        "command": "explorer.newFolder",
        "when": "explorerViewletFocus && !inputFocus"
    },
    // {
    //     "key": "shift + r",
    //     "command": "-renameFile",
    //     "when": "explorerViewletFocus && !inputFocus"
    // },
    {
        "key": "ctrl+d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    // make redo working
    {
        "command": "vscode-neovim.send",
        "key": "ctrl+r",
        "when": "editorTextFocus && neovim.mode != insert",
        "args": "<C-r>"
    },
    {
        "key": "ctrl+w h",
        "command": "-workbench.action.navigateLeft",
        "when": "!editorTextFocus && !terminalFocus"
    },
    {
        "key": "ctrl+h",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'",
        "args": "<C-h>"
    },
    // window navigation
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalCount > 1"
    }, 
    {
        "key": "ctrl+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalCount > 1"
    },
    {
        "key": "ctrl+cmd+l",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "ctrl+cmd+h",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "ctrl+n",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    }


]